@using Camunda.Http.Api
@using Camunda.Http.Api.Model


<DataGrid TItem="HistoricVariableInstanceDto" 
          Data="@_instances" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@_totalInstances" 
          PageSize="@PageSize">
    <EmptyTemplate>
        <div class="box">
            No variable instances found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="HistoricVariableInstanceDto" Field="@nameof(HistoricVariableInstanceDto.Id)" Caption="Variable Instance Id" />
        <DataGridColumn TItem="HistoricVariableInstanceDto" Field="@nameof(HistoricVariableInstanceDto.Name)" Caption="Name" />
        <DataGridColumn TItem="HistoricVariableInstanceDto" Field="@nameof(HistoricVariableInstanceDto.Type)" Caption="Type" />
        <DataGridColumn TItem="HistoricVariableInstanceDto" Field="@nameof(HistoricVariableInstanceDto.Value)" Caption="Value" />
        <DataGridDateColumn TItem="HistoricVariableInstanceDto" Field="@nameof(HistoricVariableInstanceDto.CreateTime)" Caption="Create Time" />
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 25;

    [Parameter]
    public string ProcessInstanceId { get; set; }

    private List<HistoricVariableInstanceDto> _instances;
    
    private int _totalInstances;


    async Task OnReadData(DataGridReadDataEventArgs<HistoricVariableInstanceDto> e)
    {
        var query = new HistoricVariableInstanceQueryDto()
        {
            ProcessInstanceId = ProcessInstanceId,
            Sorting = new List<HistoricVariableInstanceQueryDtoSorting>
            {
                new(HistoricVariableInstanceQueryDtoSorting.SortByEnum.VariableName, HistoricVariableInstanceQueryDtoSorting.SortOrderEnum.Asc)
            }
        };
        
        _instances = await Camunda.Api.HistoricVariableInstanceApi.QueryHistoricVariableInstancesAsync(e.PageSize * (e.Page - 1), e.PageSize, false, query);

        _totalInstances = Convert.ToInt32((await Camunda.Api.HistoricVariableInstanceApi.QueryHistoricVariableInstancesCountAsync(query)).Count);

        StateHasChanged();
    }
}
