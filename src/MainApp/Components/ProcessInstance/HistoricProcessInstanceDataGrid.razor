@using Camunda.Http.Api
@using Camunda.Http.Api.Model

<DataGrid TItem="HistoricProcessInstanceDto" 
          Data="@instances" 
          ReadData="@OnReadData"
          ShowPager="true" 
          TotalItems="@totalInstances" 
          PageSize="@pageSize">
    <EmptyTemplate>
        <div class="box">
            No historic process instances found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            <progress class="progress is-small is-primary" max="100">LOADING...............</progress>
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridCommandColumn TItem="HistoricProcessInstanceDto" Caption="Commands" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.State)" Caption="State" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.Id)" Caption="Process Instance Id" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.BusinessKey)" Caption="Business Key" />
        <DataGridDateColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.StartTime)" Caption="Start Time" />
        <DataGridDateColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.EndTime)" Caption="End Time" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.TenantId)" Caption="Tenant" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.StartUserId)" Caption="Start User Id" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.ProcessDefinitionId)" Caption="Process Definition Id" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.ProcessDefinitionKey)" Caption="Process Definition Key" />
        <DataGridColumn TItem="HistoricProcessInstanceDto" Field="@nameof(HistoricProcessInstanceDto.ProcessDefinitionName)" Caption="Process Definition Name" />

        <DataGridColumn TItem="HistoricProcessInstanceDto" Caption="Actions" Field="@nameof(HistoricProcessInstanceDto.Id)" Sortable="false" Filterable="false">
            <DisplayTemplate>
                <Blazorise.Button Color="Color.Primary" Type="ButtonType.Link" To="@("process-instances/" + context.Id)">Details</Blazorise.Button>
            </DisplayTemplate>
        </DataGridColumn>
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient camunda { get; set; }

    [Parameter]
    public string processDefinitionId { get; set; }

    [Parameter]
    public int pageSize { get; set; } = 50;

    private List<HistoricProcessInstanceDto> instances;
    private int totalInstances;



    async Task OnReadData(DataGridReadDataEventArgs<HistoricProcessInstanceDto> e)
    {
        var query = new HistoricProcessInstanceQueryDto()
        {
            ProcessDefinitionId = processDefinitionId,
            Sorting = new List<HistoricProcessInstanceQueryDtoSorting> {
                new() {
                    SortBy = HistoricProcessInstanceQueryDtoSorting.SortByEnum.StartTime,
                    SortOrder = HistoricProcessInstanceQueryDtoSorting.SortOrderEnum.Desc }
            }
        };

        var queryCount = new HistoricProcessInstanceQueryDto()
        {
            ProcessDefinitionId = processDefinitionId
        };

        instances = await camunda.Api.HistoricProcessInstanceApi.QueryHistoricProcessInstancesAsync( e.PageSize * (e.Page - 1), e.PageSize, query);

        totalInstances = Convert.ToInt32((await camunda.Api.HistoricProcessInstanceApi.QueryHistoricProcessInstancesCountAsync(queryCount)).Count);

        StateHasChanged();
    }

}
