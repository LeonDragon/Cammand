@using Camunda.Http.Api
@using Camunda.Http.Api.Model


<DataGrid TItem="ProcessInstanceDto" 
          Data="@instances" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalInstances" 
          PageSize="@PageSize">
    <EmptyTemplate>
        <div class="box">
            No Active Called Process Instances found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="ProcessInstanceDto" Field="@nameof(ProcessInstanceDto.Links)" Caption="Process Instance Id" />
        <DataGridColumn TItem="ProcessInstanceDto" Field="@nameof(ProcessInstanceDto.BusinessKey)" Caption="Business Key" />
        <DataGridColumn TItem="ProcessInstanceDto" Field="@nameof(ProcessInstanceDto.TenantId)" Caption="Tenant" />
        <DataGridColumn TItem="ProcessInstanceDto" Field="@nameof(ProcessInstanceDto.DefinitionId)" Caption="Process Definition Id" />
        <DataGridColumn TItem="ProcessInstanceDto" Caption="Actions" Field="@nameof(ProcessInstanceDto.Id)" Sortable="false" Filterable="false">
            <DisplayTemplate>
                <Blazorise.Button Color="Color.Primary" Type="ButtonType.Link" To="@("process-instances/" + context.Id)">Details</Blazorise.Button>
            </DisplayTemplate>
        </DataGridColumn>
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }

    [Parameter]
    public string SuperProcessInstanceId { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 50;

    private List<ProcessInstanceDto> instances;
    
    private int totalInstances;



    async Task OnReadData(DataGridReadDataEventArgs<ProcessInstanceDto> e)
    {
        
        var query = new ProcessInstanceQueryDto()
        {
            SuperProcessInstance = SuperProcessInstanceId
        };

        var queryCount = new ProcessInstanceQueryDto
        {
            SuperProcessInstance = SuperProcessInstanceId
        };

        instances = await Camunda.Api.ProcessInstanceApi.QueryProcessInstancesAsync(e.PageSize * (e.Page - 1), e.PageSize, query);

        totalInstances = Convert.ToInt32((await Camunda.Api.ProcessInstanceApi.QueryProcessInstancesCountAsync(queryCount)).Count);

        StateHasChanged();
    }
}
