@using Camunda.Http.Api
@using Camunda.Http.Api.Model


<DataGrid TItem="JobDto" 
          Data="@jobs" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalJobs" 
          PageSize="@PageSize">
    <EmptyTemplate>
        <div class="box">
            No Jobs found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="JobDto" Field="@nameof(JobDto.Id)" Caption="Job Id" />
        <DataGridDateColumn TItem="JobDto" Field="@nameof(JobDto.Priority)" Caption="Priority" />
        <DataGridColumn TItem="JobDto" Field="@nameof(JobDto.Retries)" Caption="Retries" />
        <DataGridColumn TItem="JobDto" Field="@nameof(JobDto.CreateTime)" Caption="Create Time" />
        <DataGridColumn TItem="JobDto" Field="@nameof(JobDto.Suspended)" Caption="Suspended?" />
        <DataGridColumn TItem="JobDto" Field="@nameof(JobDto.DueDate)" Caption="Due Date" />
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 25;

    [Parameter]
    public string ProcessInstanceId { get; set; }

    private List<JobDto> jobs;

    private int totalJobs;

    async Task OnReadData(DataGridReadDataEventArgs<JobDto> e)
    {
        jobs = await Camunda.Api.JobApi.GetJobsAsync(
            processInstanceId: ProcessInstanceId,
            sortBy: "jobDueDate",
            sortOrder: "desc"
            );

        totalJobs = Convert.ToInt32((await Camunda.Api.JobApi.GetJobsCountAsync(processInstanceId: ProcessInstanceId)).Count);

        StateHasChanged();
    }
}
