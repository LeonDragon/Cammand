@using Camunda.Http.Api.Model
@using Camunda.Http.Api

<DataGrid TItem="HistoricTaskInstanceDto" 
          Data="@userTasks" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalUserTasks" 
          PageSize="@pageSize">
    <EmptyTemplate>
        <div class="box">
            No variable instances found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            <progress class="progress is-small is-primary" max="100">LOADING...............</progress>
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="HistoricTaskInstanceDto" Field="@nameof(HistoricTaskInstanceDto.Id)" Caption="" />
        <DataGridColumn TItem="HistoricTaskInstanceDto" Field="@nameof(HistoricTaskInstanceDto.Assignee)" Caption="Assignee" />
        <DataGridDateColumn TItem="HistoricTaskInstanceDto" Field="@nameof(HistoricTaskInstanceDto.StartTime)" Caption="Start Time" />
        <DataGridColumn TItem="HistoricTaskInstanceDto" Field="@nameof(HistoricTaskInstanceDto.Name)" Caption="Name" />
        <DataGridColumn TItem="HistoricTaskInstanceDto" Field="@nameof(HistoricTaskInstanceDto.Priority)" Caption="Priority" />
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient camunda { get; set; }

    [Parameter]
    public int pageSize { get; set; } = 25;

    [Parameter]
    public string processInstanceId { get; set; }

    private List<HistoricTaskInstanceDto> userTasks;

    private int totalUserTasks;

    async Task OnReadData(DataGridReadDataEventArgs<HistoricTaskInstanceDto> e)
    {
        var query = new HistoricTaskInstanceQueryDto()
        {
            ProcessInstanceId = processInstanceId,
            Sorting = new List<HistoricTaskInstanceQueryDtoSorting>()
            {
                new()
                {
                    SortBy = HistoricTaskInstanceQueryDtoSorting.SortByEnum.StartTime,
                    SortOrder = HistoricTaskInstanceQueryDtoSorting.SortOrderEnum.Desc
                }
            }
        };

        var totalQuery = new HistoricTaskInstanceQueryDto()
        {
            ProcessInstanceId = processInstanceId
        };

        userTasks = await camunda.Api.HistoricTaskInstanceApi.QueryHistoricTaskInstancesAsync(e.PageSize * (e.Page - 1), e.PageSize, query);

        totalUserTasks = Convert.ToInt32((await camunda.Api.HistoricTaskInstanceApi.QueryHistoricTaskInstancesCountAsync(totalQuery)).Count);

        StateHasChanged();
    }
}
