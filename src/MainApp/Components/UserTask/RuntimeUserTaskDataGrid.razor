@using Camunda.Http.Api.Model
@using Camunda.Http.Api

<DataGrid TItem="TaskDto" 
          Data="@userTasks" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalUserTasks" 
          PageSize="@PageSize">
    <EmptyTemplate>
        <div class="box">
            No variable instances found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="TaskDto" Field="@nameof(TaskDto.Id)" Caption="Task Instance Id" />
        <DataGridColumn TItem="TaskDto" Field="@nameof(TaskDto.Assignee)" Caption="Assignee" />
        <DataGridDateColumn TItem="TaskDto" Field="@nameof(TaskDto.Created)" Caption="Created At" />
        <DataGridColumn TItem="TaskDto" Field="@nameof(TaskDto.Name)" Caption="Name" />
        <DataGridColumn TItem="TaskDto" Field="@nameof(TaskDto.Priority)" Caption="Priority" />
        <DataGridColumn TItem="TaskDto" Field="@nameof(TaskDto.TaskDefinitionKey)" Caption="Task Definition key" />
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 25;

    [Parameter]
    public string ProcessInstanceId { get; set; }

    private List<TaskDto> userTasks;

    private int totalUserTasks;

    async Task OnReadData(DataGridReadDataEventArgs<TaskDto> e)
    {
        var query = new TaskQueryDto()
        {
            ProcessInstanceId = ProcessInstanceId,
            Sorting = new List<TaskQueryDtoSorting>()
            {
                new()
                {
                    SortBy = TaskQueryDtoSorting.SortByEnum.Created,
                    SortOrder = TaskQueryDtoSorting.SortOrderEnum.Desc
                }
            }
        };

        var totalQuery = new TaskQueryDto()
        {
            ProcessInstanceId = ProcessInstanceId
        };

        userTasks = await Camunda.Api.TaskApi.QueryTasksAsync(e.PageSize * (e.Page - 1), e.PageSize, query);

        totalUserTasks = Convert.ToInt32((await Camunda.Api.TaskApi.QueryTasksCountAsync(totalQuery)).Count);

        StateHasChanged();
    }
}
