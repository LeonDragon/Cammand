@using Camunda.Http.Api.Model
@using Camunda.Http.Api

<DataGrid TItem="ExternalTaskDto" 
          Data="@externalTasks" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalExternalTasks" 
          PageSize="@PageSize">
    <EmptyTemplate>
        <div class="box">
            No External Tasks found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="ExternalTaskDto" Field="@nameof(ExternalTaskDto.Id)" Caption="External Task Id" />
        <DataGridColumn TItem="ExternalTaskDto" Field="@nameof(ExternalTaskDto.Priority)" Caption="Priority" />
        <DataGridColumn TItem="ExternalTaskDto" Field="@nameof(ExternalTaskDto.Suspended)" Caption="Suspended?" />
        <DataGridColumn TItem="ExternalTaskDto" Field="@nameof(ExternalTaskDto.TopicName)" Caption="Topic Name" />
        <DataGridColumn TItem="ExternalTaskDto" Field="@nameof(ExternalTaskDto.WorkerId)" Caption="Worker Id" />
        <DataGridDateColumn TItem="ExternalTaskDto" Field="@nameof(ExternalTaskDto.LockExpirationTime)" Caption="Lock Expiration Time" />
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 25;

    [Parameter]
    public string ProcessInstanceId { get; set; }

    private List<ExternalTaskDto> externalTasks;

    private int totalExternalTasks;

    async Task OnReadData(DataGridReadDataEventArgs<ExternalTaskDto> e)
    {
        var query = new ExternalTaskQueryDto()
        {
            ProcessInstanceId = ProcessInstanceId,
            Sorting = new List<ExternalTaskQueryDtoSorting>()
            {
                new()
                {
                    SortBy = ExternalTaskQueryDtoSorting.SortByEnum.LockExpirationTime,
                    SortOrder = ExternalTaskQueryDtoSorting.SortOrderEnum.Desc
                }
            }
        };

        var totalQuery = new ExternalTaskQueryDto()
        {
            ProcessInstanceId = ProcessInstanceId
        };

        externalTasks = await Camunda.Api.ExternalTaskApi.QueryExternalTasksAsync(e.PageSize * (e.Page - 1), e.PageSize, query);

        totalExternalTasks = Convert.ToInt32((await Camunda.Api.ExternalTaskApi.QueryExternalTasksCountAsync(totalQuery)).Count);

        StateHasChanged();
    }
}
