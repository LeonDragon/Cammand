@using Camunda.Http.Api.Model
@using Camunda.Http.Api

<DataGrid TItem="HistoricExternalTaskLogDto" 
          Data="@externalTasks" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalExternalTasks" 
          PageSize="@PageSize">
    <EmptyTemplate>
        <div class="box">
            No Historic External Task Logs found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.Id)" Caption="External Task Id" />
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.Priority)" Caption="Priority" />
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.CreationLog)" Caption="Creation?" />
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.SuccessLog)" Caption="Success?" />
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.FailureLog)" Caption="Failure?" />
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.DeletionLog)" Caption="Deletion?" />
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.TopicName)" Caption="Topic Name" />
        <DataGridColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.WorkerId)" Caption="Worker Id" />
        <DataGridDateColumn TItem="HistoricExternalTaskLogDto" Field="@nameof(HistoricExternalTaskLogDto.Timestamp)" Caption="Timestamp" />
    </ChildContent>
</DataGrid>

@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }
    
    [Parameter]
    public int PageSize { get; set; } = 25;

    [Parameter]
    public string ProcessInstanceId { get; set; }

    private List<HistoricExternalTaskLogDto> externalTasks;

    private int totalExternalTasks;

    async Task OnReadData(DataGridReadDataEventArgs<HistoricExternalTaskLogDto> e)
    {
        var query = new HistoricExternalTaskLogQueryDto()
        {
            ProcessInstanceId = ProcessInstanceId,
            Sorting = new List<HistoricExternalTaskLogQueryDtoSorting>()
            {
                new()
                {
                    SortBy = HistoricExternalTaskLogQueryDtoSorting.SortByEnum.Timestamp,
                    SortOrder = HistoricExternalTaskLogQueryDtoSorting.SortOrderEnum.Desc
                }
            }
        };

        var totalQuery = new HistoricExternalTaskLogQueryDto()
        {
            ProcessInstanceId = ProcessInstanceId
        };

        externalTasks = await Camunda.Api.HistoricExternalTaskLogApi.QueryHistoricExternalTaskLogsAsync(query);

        totalExternalTasks = Convert.ToInt32((await Camunda.Api.HistoricExternalTaskLogApi.QueryHistoricExternalTaskLogsCountAsync(totalQuery)).Count);

        StateHasChanged();
    }
}
