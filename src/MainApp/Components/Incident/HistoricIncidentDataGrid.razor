@using Camunda.Http.Api
@using Camunda.Http.Api.Model


<DataGrid TItem="HistoricIncidentDto" 
          Data="@incidents" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalIncidents" 
          PageSize="@PageSize">
    <EmptyTemplate>
        <div class="box">
            No incidents found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridCommandColumn TItem="HistoricIncidentDto" Caption="Commands" />
        <DataGridColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.Open)">
            <DisplayTemplate Context="stateContext">
                @if (stateContext.Open == false)
                {
                    if (stateContext.Resolved == true)
                    {
                        <Badge Color="Color.Success">Resolved</Badge>
                    }
                    else if (stateContext.Deleted == true)
                    {
                        <Badge Color="Color.Success">Deleted</Badge>
                    }

                }
                else
                {
                    <Badge Color="Color.Danger">Open</Badge>
                }
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.IncidentMessage)" Caption="Message" />
        <DataGridDateColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.CreateTime)" Caption="Create Time" />
        <DataGridDateColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.EndTime)" Caption="End Time" />
        <DataGridColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.ActivityId)" Caption="Activity Id" />
        <DataGridColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.CauseIncidentId)" Caption="Cause Incident Id" />
        <DataGridColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.RootCauseIncidentId)" Caption="Root Cause Incident Id" />
        <DataGridColumn TItem="HistoricIncidentDto" Field="@nameof(HistoricIncidentDto.IncidentType)" Caption="Type" />
    </ChildContent>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 25;

    [Parameter]
    public string ProcessInstanceId { get; set; }

    private List<HistoricIncidentDto> incidents;

    private int totalIncidents;

    async Task OnReadData(DataGridReadDataEventArgs<HistoricIncidentDto> e)
    {
        incidents = await Camunda.Api.HistoricIncidentApi.GetHistoricIncidentsAsync(
            processInstanceId: ProcessInstanceId,
            sortBy: "createTime",
            sortOrder: "desc"
            );

        totalIncidents = Convert.ToInt32((await Camunda.Api.HistoricIncidentApi.GetHistoricIncidentsCountAsync(processInstanceId: ProcessInstanceId)).Count);

        StateHasChanged();
    }


}
